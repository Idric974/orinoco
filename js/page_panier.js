//â‡“â‡“ Recuper les informations dans le localStorageâ‡“â‡“
let oldItems = localStorage.getItem("basket");

//â‡“â‡“ Format les information en JSONâ‡“â‡“
let recupbasket = JSON.parse(localStorage.getItem("basket"));

//â‡“â‡“ Affiche les information en JSON â‡“â‡“
console.log(recupbasket);

//â‡“â‡“ DÃ©clare un tableau vide pour insÃ©rer les ID â‡“â‡“
const _ids = [];

//â‡“â‡“ Condition qui affiche une message si le panier est vide â‡“â‡“
if (recupbasket == null) {
  let infobasket = "Votre panier est vide ðŸ˜²";
  document.getElementById("order_message").innerText = infobasket;
}

//â‡“â‡“ Initialise une variable pour le calcule du montant du panierâ‡“â‡“
totalAmount = 0;

//â‡“â‡“ Recuper les informations dans le panier et les places dans le tableau  crÃ©er plus haut â‡“â‡“
recupbasket.forEach((basket) => {
  console.log(basket);

  //â‡“â‡“ RÃ©cupÃ¨r les ID de commande et les places dans le tableau  crÃ©er plus hautâ‡“â‡“.
  _ids.push(basket._id);
  console.log(_ids);

  //â‡“â‡“ Calcule le montant total de la commande â‡“â‡“.
  totalAmount += basket.totalLigne;

  //â‡“â‡“ CrÃ©ation Ã©lÃ©ment 'ul' pour chaque index â‡“â‡“.
  let listebasket = document.createElement("ul");

  //â‡“â‡“ Met dans les â€˜trâ€™ les infos de lâ€™API â‡“â‡“.
  listebasket.innerHTML = `
                    
            <ul>
                <li><img src=${basket.image}  class="image_panier" ></li> 
                <li class="description_panier">
                Votre ${basket.name} 
                de couleur ${basket.color}
                Ã  ${basket.price}â‚¬
                QtÃ©:${basket.qte}
                pour un total ${basket.totalLigne}â‚¬.
                </li>

            </li>

        `;

  //â‡“â‡“ Ecrit les 'tr' dans HTML â‡“â‡“.
  document.querySelector("tbody").appendChild(listebasket);
});

//â‡“â‡“ Ecrit le montant total de la commande dans le DOMâ‡“â‡“.
document.getElementById(
  "order_message"
).innerText = `Le total de votre commande est de: ${totalAmount}â‚¬`;

//â‡“â‡“ RÃ©cupÃ¨re la totalitÃ© du formulaireâ‡“â‡“.
const $commande_client = document.getElementById("commande_client");

//â‡“â‡“ RÃ©cupÃ¨re les champs du formulaireâ‡“â‡“.
const $firstName = document.getElementById("firstName");
const $lastName = document.getElementById("lastName");
const $address = document.getElementById("address");
const $city = document.getElementById("city");
const $email = document.getElementById("email");

//â‡“â‡“ Ecoute lâ€™Ã©vÃ©nement Â« submit Â» sur le bouton du formulaireâ‡“â‡“.
$commande_client.addEventListener("submit", function (e) {
  //â‡“â‡“ Bloc la propagation de lâ€™Ã©vÃ¨nement par dÃ©faut de submitâ‡“â‡“.
  e.preventDefault();

  if (
    $firstName.value.trim().length < 2 ||
    $lastName.value.trim().length < 2 ||
    $address.value.trim().length < 2 ||
    $city.value.trim().length < 2 ||
    $email.value.trim().length < 2
  ) {
    alert("Erreur de saisi tous les champs doivent Ãªtre complÃ©tÃ©s");
    return;
  }

  //â‡“â‡“ RÃ©cupÃ¨re le contenu des champs du formulaire â‡“â‡“.
  const customerOrder = {
    contact: {
      firstName: $firstName.value,
      lastName: $lastName.value,
      address: $address.value,
      city: $city.value,
      email: $email.value,
    },

    products: [_ids],
  };

  console.log(customerOrder);

  //â‡“â‡“ URL de la requÃªteâ‡“â‡“.
  let url = "http://localhost:3000/api/teddies/order";

  //â‡“â‡“ ParamÃ¨tres de la requÃªteâ‡“â‡“.
  const parametresDeRequete = {
    method: "POST",
    body: JSON.stringify(customerOrder),
    headers: new Headers({
      "Content-Type": "application/json; charset=UTF-8 ",
    }),
  };

  //â‡“â‡“ la requÃªte avec URL et ParamÃ¨tresâ‡“â‡“.
  fetch(url, parametresDeRequete)
    .then((response) => response.json())
    .then((response) => {
      console.log(response);
      //alert(JSON.stringify(response));

      let orderId = response.orderId;

      window.location.href = `/html/order.html?orderId=${orderId}&totalAmount=${totalAmount}`;
    })

    .catch((error) => alert("Erreur : " + error));
});
